// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using mobileBackendsoftFount.Data;

#nullable disable

namespace mobileBackendsoftFount.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250223093506_AddSellingReceipt")]
    partial class AddSellingReceipt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("mobileBackendsoftFount.Models.Benzene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PriceOfLitre")
                        .HasColumnType("real");

                    b.Property<float>("PriceOfSelling")
                        .HasColumnType("real");

                    b.Property<float>("RateOfEvaporation")
                        .HasColumnType("real");

                    b.Property<float>("RateOfTaxes")
                        .HasColumnType("real");

                    b.Property<float>("RateOfVats")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Benzenes");
                });

            modelBuilder.Entity("mobileBackendsoftFount.Models.BenzeneGunCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BenzeneType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("EndRoundOneCount")
                        .HasColumnType("bigint");

                    b.Property<long>("EndRoundThreeCount")
                        .HasColumnType("bigint");

                    b.Property<long>("EndRoundTwoCount")
                        .HasColumnType("bigint");

                    b.Property<int>("GunNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("SellingReceiptId")
                        .HasColumnType("integer");

                    b.Property<long>("StartCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SellingReceiptId");

                    b.ToTable("BenzeneGunCounters");
                });

            modelBuilder.Entity("mobileBackendsoftFount.Models.SellingReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SellingReceipts");
                });

            modelBuilder.Entity("mobileBackendsoftFount.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("mobileBackendsoftFount.Models.BenzeneGunCounter", b =>
                {
                    b.HasOne("mobileBackendsoftFount.Models.SellingReceipt", null)
                        .WithMany("GunCounters")
                        .HasForeignKey("SellingReceiptId");
                });

            modelBuilder.Entity("mobileBackendsoftFount.Models.SellingReceipt", b =>
                {
                    b.Navigation("GunCounters");
                });
#pragma warning restore 612, 618
        }
    }
}
